{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Spring Boot Security API Collection",
		"description": "Complete API collection for Spring Boot Security application with JWT authentication, email verification, and Google 2FA features.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Authentication related endpoints for user registration, login, and email verification",
			"item": [
				{
					"name": "User Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account. After successful registration, a verification email will be sent to the provided email address."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User registered successfully! Please check your email to verify your account.\"\n}"
						}
					]
				},
				{
					"name": "User Login (Without 2FA)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password. Returns JWT token if successful. Email must be verified before login."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTY0MjY4MDAwMCwiZXhwIjoxNjQyNzY2NDAwfQ.example_jwt_token\",\n    \"email\": \"john.doe@example.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"emailVerified\": true,\n    \"twoFactorEnabled\": false\n}"
						}
					],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "User Login (With 2FA)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"twoFactorCode\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email, password, and 2FA code. Use this when user has 2FA enabled. The twoFactorCode should be the 6-digit code from Google Authenticator."
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/verify-email?token={{verificationToken}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"verify-email"
							],
							"query": [
								{
									"key": "token",
									"value": "{{verificationToken}}",
									"description": "Email verification token received via email"
								}
							]
						},
						"description": "Verify user's email address using the token sent to their email. This token is typically received via email after registration."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/verify-email?token=sample-verification-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"verify-email"
									],
									"query": [
										{
											"key": "token",
											"value": "sample-verification-token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Email verified successfully!\"\n}"
						}
					]
				},
				{
					"name": "Resend Verification Email",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/resend-verification?email=john.doe@example.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"resend-verification"
							],
							"query": [
								{
									"key": "email",
									"value": "john.doe@example.com",
									"description": "Email address to resend verification email to"
								}
							]
						},
						"description": "Resend email verification link to the specified email address. Use this if the original verification email was not received or expired."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/resend-verification?email=john.doe@example.com",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"resend-verification"
									],
									"query": [
										{
											"key": "email",
											"value": "john.doe@example.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Verification email sent\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Two-Factor Authentication",
			"description": "Two-Factor Authentication (2FA) management endpoints using Google Authenticator",
			"item": [
				{
					"name": "Setup 2FA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/2fa/setup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"2fa",
								"setup"
							]
						},
						"description": "Initialize 2FA setup for the authenticated user. Returns secret key and QR code URL for Google Authenticator setup. Requires valid JWT token."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/auth/2fa/setup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"setup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"secret\": \"JBSWY3DPEHPK3PXP\",\n    \"qrCodeUrl\": \"otpauth://totp/SecurityExampleApp:john.doe@example.com?secret=JBSWY3DPEHPK3PXP&issuer=SecurityExampleApp\",\n    \"manualEntryKey\": \"JBSWY3DPEHPK3PXP\"\n}"
						}
					]
				},
				{
					"name": "Verify 2FA Setup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/2fa/verify-setup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"2fa",
								"verify-setup"
							]
						},
						"description": "Verify and complete 2FA setup by providing the 6-digit code from Google Authenticator. This enables 2FA for the user account."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/2fa/verify-setup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"verify-setup"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Two-factor authentication enabled successfully\"\n}"
						}
					]
				},
				{
					"name": "Disable 2FA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"description": "JWT token obtained from login"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/2fa/disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"2fa",
								"disable"
							]
						},
						"description": "Disable 2FA for the authenticated user. Requires verification with current 2FA code to confirm the action."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"code\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/2fa/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"disable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Two-factor authentication disabled successfully\"\n}"
						}
					]
				},
				{
					"name": "Get QR Code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"description": "JWT token obtained from login"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/2fa/qr-code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"2fa",
								"qr-code"
							]
						},
						"description": "Get QR code image for Google Authenticator setup. Returns PNG image that can be scanned by Google Authenticator app. Only available during 2FA setup process."
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{authToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/auth/2fa/qr-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"2fa",
										"qr-code"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "image/png"
								}
							],
							"cookie": [],
							"body": "[Binary PNG Image Data]"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string",
			"description": "Base URL for the Spring Boot Security API"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string",
			"description": "JWT authentication token obtained from login"
		},
		{
			"key": "verificationToken",
			"value": "",
			"type": "string",
			"description": "Email verification token received via email"
		}
	]
}